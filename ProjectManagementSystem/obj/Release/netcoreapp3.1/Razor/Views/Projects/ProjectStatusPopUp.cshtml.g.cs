#pragma checksum "C:\Users\premiere\source\repos\ProjectManagementSystem\ProjectManagementSystem\Views\Projects\ProjectStatusPopUp.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "61bd97f0eb8f5bc1a65e5717d3ee02fd10a0ffbe"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Projects_ProjectStatusPopUp), @"mvc.1.0.view", @"/Views/Projects/ProjectStatusPopUp.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\premiere\source\repos\ProjectManagementSystem\ProjectManagementSystem\Views\_ViewImports.cshtml"
using ProjectManagementSystem;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\premiere\source\repos\ProjectManagementSystem\ProjectManagementSystem\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\premiere\source\repos\ProjectManagementSystem\ProjectManagementSystem\Views\Projects\ProjectStatusPopUp.cshtml"
using ProjectManagementSystem.ViewModels;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"61bd97f0eb8f5bc1a65e5717d3ee02fd10a0ffbe", @"/Views/Projects/ProjectStatusPopUp.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d4d859d2befe7314297517f7cc2ff7e48d506275", @"/Views/_ViewImports.cshtml")]
    public class Views_Projects_ProjectStatusPopUp : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ProjectManagementSystem.ViewModels.ProjectDetailsViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n<div id=\"projectStatusContent\" class=\"k-content\">\r\n        <div>\r\n            ");
#nullable restore
#line 6 "C:\Users\premiere\source\repos\ProjectManagementSystem\ProjectManagementSystem\Views\Projects\ProjectStatusPopUp.cshtml"
        Write(Html.Kendo().Grid<RequirementEffortViewModel>()
                .Name("projectStatusRequirementEffortGrid")
                .Columns(columns =>
                {
                    columns.Bound(p => p.Requirement.RequirementName)
                        .ClientGroupHeaderTemplate("Requirement: #=data.value#, Total Time Expended: #=data.aggregates.TimeExpended.sum# hours");
                    columns.Bound(p => p.RequirementEffortType.DisplayName)
                        .ClientGroupHeaderTemplate("Effort Type: #=data.value#, Total Time Expended: #=data.aggregates.TimeExpended.sum# hours");
                    columns.Bound(p => p.TeamMember.FullName).Title("Team Member");
                    columns.Bound(p => p.TimeFrame.DisplayName);
                    columns.Bound(p => p.DateFrom).ClientTemplate("#= kendo.toString(DateFrom, 'MM/dd/yyyy') #").Width(150);
                    columns.Bound(p => p.DateTo).ClientTemplate("#= kendo.toString(DateTo, 'MM/dd/yyyy') #").Width(150);
                    columns.Bound(p => p.TimeExpended)
                        .ClientFooterTemplate("Total Project Time: #=sum# hours");;
                })
                .Navigatable()
                .Pageable(pageable => pageable
                    .Input(true)
                    .Numeric(false))
                .Sortable()
                .Scrollable(s => s.Height("auto"))
                .DataSource(dataSource =>
                {
                    dataSource.Ajax()
                        .Aggregates(agg =>
                        {
                            agg.Add(p => p.TimeExpended).Sum();
                        })
                        .Group(groups =>
                        {
                            groups.Add(p => p.Requirement.RequirementName);
                            groups.Add(p => p.RequirementEffortType.DisplayName);
                        })
                        .PageSize(10)
                        .Read(read =>
                        {
                            read.Type(HttpVerbs.Get);
                            read.Action("Grid_Read", "RequirementEfforts", new {IdProject = Model.Id});
                        });

                }));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
    </div>
</div>

<script>
    $(document).ready(function() {

        
    });


</script>

<style>

    .k-grid .k-grid-content {
        max-height: 650px;
    }

    .k-grid .k-grid-header .k-header .k-link {
        height: auto;
    }

    .k-grid .k-grid-header .k-header {
        white-space: normal;
    }

</style>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ProjectManagementSystem.ViewModels.ProjectDetailsViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
