@using ProjectManagementSystem.Models
@using ProjectManagementSystem.ViewModels
@model ProjectManagementSystem.ViewModels.ProjectDetailsViewModel

@{ ViewData["Title"] = $"{@Model.Name} Details"; }

<h1>@Model.Name</h1>

<div class="k-content">
    <div id="tabStrip">
        <ul>
            <li class="k-state-active">
                General Information
            </li>
            <li>
                Team Members
            </li>
            <li>
                Risks
            </li>
            <li>
                Requirements
            </li>
            <li>
                Monitoring And Tracking
            </li>
        </ul>
        <div id="generalInformationTab">
            <p class="label">
                @Html.LabelFor(model => model.Name)
            </p>
            <ul>
                <li class="field">
                    @Html.DisplayTextFor(model => model.Name)
                </li>
            </ul>
            <p class="label">
                @Html.LabelFor(model => model.OwnerName)
            </p>
            <ul>
                <li class="field">
                    @Html.DisplayFor(model => model.OwnerName)
                </li>
            </ul>
            <p class="label">
                @Html.LabelFor(model => model.Description)
            </p>
            <ul>
                <li class="field">
                    @Html.DisplayFor(model => model.Description)
                </li>
            </ul>

            <a asp-action="Edit" asp-route-id="@Model.Id" class="k-button">Edit</a> |
            <a asp-action="Index" class="k-button">Back to List</a>
        </div>
        <div>
            @(Html.Kendo().Grid<TeamMember>(Model.TeamMembers)
                .Name("teamMemberGrid")
                .Columns(columns =>
                {
                    columns.Bound(teamMember => teamMember.FirstName);
                    columns.Bound(teamMember => teamMember.LastName);
                })
                .Navigatable()
                .Sortable()
                .Scrollable()
                .Pageable(pageable => pageable
                    .Input(true)
                    .Numeric(false)))
        </div>
        <div>
            @(Html.Kendo().Grid<Risk>(Model.Risks)
                .Name("riskGrid")
                .Columns(columns =>
                {
                    columns.Bound(risk => risk.RiskName);
                    columns.Bound(risk => risk.RiskStatus);
                })
                .Navigatable()
                .Sortable()
                .Scrollable()
                .Pageable(pageable => pageable
                    .Input(true)
                    .Numeric(false)))
        </div>
        <div>
            @(Html.Kendo().Grid<RequirementViewModel>(Model.Requirements)
                .Name("requirementGrid")
                .Columns(columns =>
                {
                    columns.Bound(p => p.RequirementName);
                    columns.Bound(p => p.Description);
                    columns.Bound(p => p.RequirementType.DisplayName);
                })
                .Navigatable()
                .Sortable()
                .Scrollable()
                .Pageable(pageable => pageable
                    .Input(true)
                    .Numeric(false)))
        </div>
        <div>
            <div id="effortButtonBox">
                @(Html.Kendo().Button()
                    .Name("viewProjectAnalysisButton")
                    .HtmlAttributes(new { type = "button" })
                    .Content("Analyze Project Status"))
            </div>

            @(Html.Kendo().Grid<RequirementEffortViewModel>(Model.RequirementEfforts)
                .Name("requirementEffortGrid")
                .Columns(columns =>
                {
                    columns.Bound(p => p.Requirement.RequirementName);
                    columns.Bound(p => p.RequirementEffortType.DisplayName);
                    columns.Bound(p => p.TeamMember.FullName).Title("Team Member");
                    columns.Bound(p => p.TimeFrame.DisplayName);
                    columns.Bound(p => p.DateFrom).ClientTemplate("#= kendo.toString(DateFrom, 'MM/dd/yyyy') #");
                    columns.Bound(p => p.DateTo).ClientTemplate("#= kendo.toString(DateTo, 'MM/dd/yyyy') #");
                    columns.Bound(p => p.TimeExpended);
                })
                .Navigatable()
                .Pageable(pageable => pageable
                    .Input(true)
                    .Numeric(false))
                .Sortable()
                .Scrollable())
        </div>
    </div>
</div>

<div style="display: none">
    @(Html.Kendo().Window()
        .Name("viewProjectAnalysisWindow")
        .Title($"{@Model.Name} Status")
        .Modal(true)
        .Visible(false)
        .Content("loading...")
        .Resizable()
        .Draggable()
        .LoadContentFrom("ProjectStatusPopUp", "Projects", new { IdProject = Model.Id })
        .Actions(actions => actions
            .Close())
        )
</div>

<script>
    $(document).ready(function() {

        $("#tabStrip").kendoTabStrip({
            animation: {
                open: {
                    effects: "fadeIn"
                }
            }
        });

        $("#viewProjectAnalysisButton").bind("click",
            function () {
                $("#viewProjectAnalysisWindow").data("kendoWindow").maximize().open();
            });
    });

</script>

<style>

    p.label {
        margin: 0 0 0em;
        padding: 0;
        display: block;
        font-weight: bold;
    }

    li.field {
        margin: 0 0 0em;
        padding: 0;
        width: 100%;
    }
    
    #tabStrip > .k-content {
        overflow: visible;
    }

    #effortButtonBox {
        padding-bottom: 10px
    }

    .k-grid .k-grid-header .k-header .k-link {
        height: auto;
    }

    .k-grid .k-grid-header .k-header {
        white-space: normal;
    }

</style>