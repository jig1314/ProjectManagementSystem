@using ProjectManagementSystem.ViewModels
@model ProjectManagementSystem.ViewModels.ProjectDetailsViewModel

<div id="projectStatusContent" class="k-content">
        <div>
            @(Html.Kendo().Grid<RequirementEffortViewModel>()
                .Name("projectStatusRequirementEffortGrid")
                .Columns(columns =>
                {
                    columns.Bound(p => p.Requirement.RequirementName)
                        .ClientGroupHeaderTemplate("Requirement: #=data.value#, Total Time Expended: #=data.aggregates.TimeExpended.sum# hours");
                    columns.Bound(p => p.RequirementEffortType.DisplayName)
                        .ClientGroupHeaderTemplate("Effort Type: #=data.value#, Total Time Expended: #=data.aggregates.TimeExpended.sum# hours");
                    columns.Bound(p => p.TeamMember.FullName).Title("Team Member");
                    columns.Bound(p => p.TimeFrame.DisplayName);
                    columns.Bound(p => p.DateFrom).ClientTemplate("#= kendo.toString(DateFrom, 'MM/dd/yyyy') #").Width(150);
                    columns.Bound(p => p.DateTo).ClientTemplate("#= kendo.toString(DateTo, 'MM/dd/yyyy') #").Width(150);
                    columns.Bound(p => p.TimeExpended)
                        .ClientFooterTemplate("Total Project Time: #=sum# hours");;
                })
                .Navigatable()
                .Pageable(pageable => pageable
                    .Input(true)
                    .Numeric(false))
                .Sortable()
                .Scrollable(s => s.Height("auto"))
                .DataSource(dataSource =>
                {
                    dataSource.Ajax()
                        .Aggregates(agg =>
                        {
                            agg.Add(p => p.TimeExpended).Sum();
                        })
                        .Group(groups =>
                        {
                            groups.Add(p => p.Requirement.RequirementName);
                            groups.Add(p => p.RequirementEffortType.DisplayName);
                        })
                        .PageSize(10)
                        .Read(read =>
                        {
                            read.Type(HttpVerbs.Get);
                            read.Action("Grid_Read", "RequirementEfforts", new {IdProject = Model.Id});
                        });

                }))
    </div>
</div>

<script>
    $(document).ready(function() {

        
    });


</script>

<style>

    .k-grid .k-grid-content {
        max-height: 650px;
    }

    .k-grid .k-grid-header .k-header .k-link {
        height: auto;
    }

    .k-grid .k-grid-header .k-header {
        white-space: normal;
    }

</style>